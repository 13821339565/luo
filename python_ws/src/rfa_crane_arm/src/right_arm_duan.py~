#!/usr/bin/env python
# coding=utf-8
#∂À≈Ã◊” ÷ ∆
"""
    crane_arm.py - move crane arm according to predefined gestures

"""

import rospy
import sys
from std_msgs.msg import Float64

class Loop:
    def __init__(self):
		rospy.on_shutdown(self.cleanup)
		self.right_arm_joint1 = rospy.Publisher('/right_arm_shoulder_pan_joint/command',Float64)
		self.right_arm_joint2 = rospy.Publisher('/right_arm_shoulder_lift_joint/command',Float64)
		self.right_arm_joint3 = rospy.Publisher('/right_arm_elbow_flex_joint/command',Float64)
		self.right_arm_joint4 = rospy.Publisher('/right_arm_wrist_flex_joint/command',Float64)
		self.right_arm_joint5 = rospy.Publisher('/right_gripper_joint/command',Float64)
		self.right_arm_joint6 = rospy.Publisher('/right_tool_joint/command',Float64)
		self.right_arm_pos1 = Float64()
		self.right_arm_pos2 = Float64()
		self.right_arm_pos3 = Float64()
		self.right_arm_pos4 = Float64()
		self.right_arm_pos5 = Float64()
		self.right_arm_pos6 = Float64()
		# Initial gesture of robot arm joint1 + joint4 = 90, joint3 + joint5 = 90 + 90(joint3 self + 90)
				# initial gesture 
		self.right_arm_pos1 = 0
		self.right_arm_joint1.publish(self.right_arm_pos1)
		rospy.sleep(2)
		# raise hand
		self.right_arm_pos1 = 0.3925
		self.right_arm_joint1.publish(self.right_arm_pos1)
		rospy.sleep(2)
		self.right_arm_pos1 = 1.57
		self.right_arm_joint1.publish(self.right_arm_pos1)
		rospy.sleep(2)		
		self.right_arm_pos3 = 0.7
		self.right_arm_joint3.publish(self.right_arm_pos3)
		rospy.sleep(2)
		self.right_arm_pos4 = -0.2
		self.right_arm_joint4.publish(self.right_arm_pos4)
		rospy.sleep(2)
		self.right_arm_pos6 = -0.2
		self.right_arm_joint6.publish(self.right_arm_pos6)
		rospy.sleep(2)

		sys.exit();

    def cleanup(self):
        rospy.loginfo("Shutting down right arm....")

if __name__=="__main__":
    rospy.init_node('turtlebot_arm')
    try:
        Loop()
        rospy.spin()
    except rospy.ROSInterruptException:
        pass


